<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cy</groupId>
	<artifactId>cy-generator</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<description>cy-generator</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<mybatis.spring.boot.version>1.3.0</mybatis.spring.boot.version>
		<mysql.version>8.0.16</mysql.version>
		<druid.version>1.0.28</druid.version>
		<commons.lang.version>2.6</commons.lang.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.freemarker</groupId>
		  <artifactId>freemarker</artifactId>
		  <version>2.3.26-incubating</version>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>5.0.4</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.cy.GenApplication</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- ProGuard混淆插件 -->
			<plugin><!--将所有的依赖达到一个jar包里-->
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!--这里要替换成jar包main方法所在类-->
							<mainClass>com.sq.platform.datacube.core.impl.DataCube</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- 指定在打包节点执行jar包合并操作 -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--用混淆插件混淆代码-->
<!--			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.11</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<attach>true</attach>
					<attachArtifactClassifier>pg</attachArtifactClassifier>
					&lt;!&ndash; attach 的作用是在 install 与 deploy 时将生成的 pg 文件也安装与部署 &ndash;&gt;
					<options> &lt;!&ndash; 详细配置方式参考 ProGuard 官方文档 &ndash;&gt;
						<option>-ignorewarnings</option> &lt;!&ndash;忽略所有告警&ndash;&gt;
						<option>-dontshrink</option>   &lt;!&ndash;不做 shrink &ndash;&gt;
						<option>-dontoptimize</option> &lt;!&ndash;不做 optimize &ndash;&gt;
						<option>-dontskipnonpubliclibraryclasses </option>
						<option>-dontskipnonpubliclibraryclassmembers </option>
						<option>-dontnote </option>

						<option>-keepattributes Signature</option>

						&lt;!&ndash;保持源码名与行号（异常时有明确的栈信息），注解（默认会过滤掉所有注解，会影响框架的注解）&ndash;&gt;
						<option>-keepattributes Exceptions,InnerClasses,*Annotation*,Signature,LineNumberTable</option>


						&lt;!&ndash; 保持bean类名与属性名不变不变 &ndash;&gt;
						<option>-keep class com.sq.platform.datacube.model.**</option>
						<option>-keepclassmembers class com.sq.platform.datacube.model.** { *;}</option>
						&lt;!&ndash; 保持对外的接口性质类对外的类名与方法名不变 &ndash;&gt;
						<option>-keep class com.sq.platform.datacube.core.**</option>
						<option>-keepclassmembers class com.sq.platform.datacube.core.** { *;}</option>

						<option>-keep class com.sq.platform.datacube.exception.**</option>
						<option>-keepclassmembers class com.sq.platform.datacube.exception.** { *;}</option>

						&lt;!&ndash;以下配置第三方包不参与混淆&ndash;&gt;
						<option>-keepclassmembers class com.hopechart.dcroute.** { *;}</option>
						<option>-dontwarn com.hopechart.dcroute.**</option>
						<option>-keep class com.hopechart.dcroute.** {*;}</option>

						<option>-keepclassmembers class com.hopechart.cloud.** { *;}</option>
						<option>-dontwarn com.hopechart.cloud.**</option>
						<option>-keep class com.hopechart.cloud.** {*;}</option>

						<option>-keepclassmembers class com.hopechart.jcc.** { *;}</option>
						<option>-dontwarn com.hopechart.jcc.**</option>
						<option>-keep class com.hopechart.jcc.** {*;}</option>

						<option>-keepclassmembers class oracle.** { *;}</option>
						<option>-dontwarn oracle.**</option>
						<option>-keep class oracle.**</option>

						<option>-keepclassmembers class org.aopalliance.** { *;}</option>
						<option>-dontwarn org.aopalliance.**</option>
						<option>-keep class org.aopalliance.**</option>

						<option>-keepclassmembers class org.apache.commons.** { *;}</option>
						<option>-dontwarn org.apache.commons.**</option>
						<option>-keep class org.apache.commons.**</option>

						<option>-keepclassmembers class org.apache.log4j.** { *;}</option>
						<option>-dontwarn org.apache.log4j.**</option>
						<option>-keep class org.apache.log4j.**</option>

						<option>-keepclassmembers  class org.slf4j.** { *;}</option>
						<option>-dontwarn  org.slf4j.**</option>
						<option>-keep class org.slf4j.**</option>

						<option>-keepclassmembers class org.springframework.** { *;}</option>
						<option>-dontwarn  org.springframework.**</option>
						<option>-keep class org.springframework.**</option>

					</options>
					&lt;!&ndash;指定混淆的jar包，我这里是将上一步输出的jar包进行混淆&ndash;&gt;
					<injar>datacube-1.0-SNAPSHOT-jar-with-dependencies.jar</injar>
					&lt;!&ndash;指定输出的jar包名&ndash;&gt;
					<outjar>${project.build.finalName}-pg</outjar>
					<obfuscate>true</obfuscate>
					&lt;!&ndash; 添加依赖，必须添加，不然会报一些莫名错误&ndash;&gt;
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jce.jar</lib>
					</libs>
				</configuration>
			</plugin>-->
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.txt</include>
				</includes>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
